package com.amazon;

import java.util.Stack;
/*
 * 
 * Find min in stack using O(n) Space Complexity
 */
public class DeleteMinFromStack {

	void createStack(Stack<Integer> primary, Stack<Integer> minStack, int[] arr) {

		primary.push(arr[0]);
		minStack.push(arr[0]);

		for (int i = 1; i < arr.length; i++) {
			primary.push(arr[i]);
			if (arr[i] <= minStack.peek())
				minStack.push(arr[i]);
		}

	}

	int findMin(Stack<Integer> primaryStack, Stack<Integer> secStack) {
		int min = 0;

		return secStack.peek();
	}

	public static void main(String args[]) {

		Stack<Integer> primaryStack = new Stack<Integer>();
		Stack<Integer> minStack = new Stack<Integer>();

		DeleteMinFromStack deleteMinFromStack = new DeleteMinFromStack();

		int[] arr = { 5, 5, 6, 8, 13, 1, 11, 6, 12 };
		deleteMinFromStack.createStack(primaryStack, minStack, arr);
		int mimElement = deleteMinFromStack.findMin(primaryStack, minStack);

		for (int i = 0; i < 2; i++) {
			primaryStack.pop();
		}

		System.out.println(" Minimum element is " + mimElement);
	}

}
