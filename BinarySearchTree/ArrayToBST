package beta.binaryTree;

import beta.binaryTree.BinaryTree.Node;

public class ArrayToTreeConversion {
	private Node<Integer> convert(int[] arr) {
		return convert(arr, 0, arr.length - 1);
	}
	private Node<Integer> convert(int[] arr, int low, int high) {
		int mid = (high + low) / 2;
		if (low > high) {
			return null;
		}
		Node<Integer> root = new Node<Integer>(arr[mid]);
		root.left = convert(arr, low, mid - 1);
		
		root.right = convert(arr, mid + 1, high);
		return root;
	}

	public static void main(String ags[]) {
		int[] arr = { 1, 2, 3, 4, 5, 6, 7, 8, 9 };
		BinaryTree<Integer> binaryTree = new BinaryTree<Integer>();
		Node<Integer> root = new ArrayToTreeConversion().convert(arr);
		binaryTree.displayBinaryTree(root);
	}
}
