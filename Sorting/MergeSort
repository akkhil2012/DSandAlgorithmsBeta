package beta.sort;

public class MergeSort {

	public void mergeSort(int[] arr) {
		int length = arr.length;

		sort(arr, 0, length - 1);

		for (int k : arr) {
			System.out.print("-------> " + k);
		}

	}

	public void sort(int[] arr, int low, int high) {

		if (low >= high) {
			return;
		}

		int mid = (high + low) / 2;
		sort(arr, low, mid);
		sort(arr, mid + 1, high);

		sortedMerge(arr, low, high);

	}

	private void sortedMerge(int[] arr, int low, int high) {
		int mid = (high + low) / 2;
		int i = low;
		int j = mid + 1;// mid
		int k = 0;
		int temp[] = new int[high - low + 1];// individual auxiliary array
		while (i <= mid && j <= high) {
			if (arr[i] <= arr[j])
				temp[k++] = arr[i++];
			else
				temp[k++] = arr[j++];
		}

		while (i <= mid) {
			temp[k++] = arr[i++];
		}

		while (j <= high) {
			temp[k++] = arr[j++];
		}

		i = low;
		for (int n = 0; n < temp.length; n++) {
			arr[i++] = temp[n++];
		}

	}

	public static void main(String args[]) {

		int[] arr = { 12, 11, 13, 5, 6, 7 };

		new MergeSort().mergeSort(arr);

	}

}
